// API Test for Token Blacklist
import axios from 'axios';

const BASE_URL = 'http://localhost:8080/api';

// Test credentials
const testCredentials = {
    identifier: '0123456789', // Thay b·∫±ng phone number c√≥ trong DB
    password: '123456' // Thay b·∫±ng password th·ª±c t·∫ø
};

async function testTokenBlacklist() {
    console.log('üß™ Testing Token Blacklist API...\n');

    try {
        // Step 1: Login to get token
        console.log('1Ô∏è‚É£ Testing login...');
        const loginResponse = await axios.post(`${BASE_URL}/auth/login`, testCredentials);
        
        if (!loginResponse.data.token) {
            console.error('‚ùå Login failed - no token received');
            return;
        }

        const token = loginResponse.data.token;
        console.log('‚úÖ Login successful, token:', token.substring(0, 30) + '...');

        // Step 2: Test authenticated request
        console.log('\n2Ô∏è‚É£ Testing authenticated request...');
        const authHeaders = { Authorization: `Bearer ${token}` };
        
        const profileResponse = await axios.get(`${BASE_URL}/user/profile`, { headers: authHeaders });
        console.log('‚úÖ Authenticated request successful');

        // Step 3: Logout (blacklist token)
        console.log('\n3Ô∏è‚É£ Testing logout...');
        const logoutResponse = await axios.post(`${BASE_URL}/auth/logout`, {}, { headers: authHeaders });
        console.log('‚úÖ Logout successful:', logoutResponse.data.message);

        // Step 4: Try to use blacklisted token
        console.log('\n4Ô∏è‚É£ Testing blacklisted token usage...');
        try {
            await axios.get(`${BASE_URL}/user/profile`, { headers: authHeaders });
            console.log('‚ùå ERROR: Blacklisted token still works!');
        } catch (error) {
            if (error.response?.status === 401) {
                console.log('‚úÖ Blacklisted token correctly rejected:', error.response.data.message);
            } else {
                console.log('‚ö†Ô∏è Unexpected error:', error.message);
            }
        }

        console.log('\nüéâ Token blacklist test completed successfully!');

    } catch (error) {
        console.error('‚ùå Test failed:', error.response?.data || error.message);
    }
}

// Run the test
testTokenBlacklist();
